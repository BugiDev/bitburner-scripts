import { AutocompleteData, NS } from '@ns';
import { walkWholeNetwork } from '/util/network';
import { CONFIG } from '/config';
import { validateServerName } from '/util/validation';

export function autocomplete(data: AutocompleteData) {
  return [...data.servers]; // This script autocompletes the list of servers.
}

/** @param {NS} ns */
export async function main(ns: NS): Promise<void> {
  const targetName = ns.args[0] as string;
  const debug = (ns.args[1] || false) as boolean;

  validateServerName(targetName);

  await walkWholeNetwork(
    ns,
    (ns, serverName, _debug) => runMalware(ns, serverName, targetName),
    debug
  );
}

function runMalware(ns: NS, serverName: string, targetName: string) {
  const serverMaxRAM = ns.getServerMaxRam(serverName);
  const scriptRAM = ns.getScriptRam(CONFIG.malwareFile);
  const threadCount = Math.floor(serverMaxRAM / scriptRAM);

  if (threadCount > 0) {
    ns.exec(CONFIG.malwareFile, serverName, threadCount, targetName, threadCount);
  }
}
